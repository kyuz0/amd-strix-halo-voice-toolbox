name: build-and-publish

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Image tag to publish (e.g. latest)"
        required: true
        default: "latest"

env:
  IMAGE_REPO: kyuz0/amd-strix-halo-voice

permissions:
  contents: read

concurrency:
  group: build-and-publish-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Aggressive disk cleanup to avoid ENOSPC on GitHub runners
      - name: Free disk space
        shell: bash
        run: |
          set -euxo pipefail
          echo "Disk BEFORE:"; df -h
          sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt/ghc || true
          sudo rm -rf /opt/hostedtoolcache/CodeQL /opt/hostedtoolcache/go || true
          docker system prune -af || true
          docker builder prune -af || true
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
          sudo rm -rf /opt/hostedtoolcache
          echo "Disk AFTER:"; df -h
          
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ env.IMAGE_REPO }}
          tags: |
            type=raw,value=${{ github.event.inputs.tag }}
            type=sha
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          # single arch only (fast). Add more if you need multi-arch.
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # speed up subsequent builds
          cache-from: type=gha
          cache-to: type=gha,mode=max
